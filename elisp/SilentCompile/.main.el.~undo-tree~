(undo-tree-save-format-version . 1)
"81761da2f8ac9daa24bb05f5f882f2ea3043ffaf"
[nil nil nil nil (25959 42513 924590 375000) 0 nil]
([nil nil ((nil rear-nonsticky nil 392 . 393) (nil fontified nil 1 . 393) (1 . 393) (t . -1)) nil (25959 42517 627073 314000) 0 nil])
([nil nil ((35 . 36) (1 . 11) (24 . 25)) nil (25959 42697 838693 711000) 0 nil] [nil nil ((#(" " 0 1 (face font-lock-comment-delimiter-face fontified nil)) . -14) (13 . 14) (1 . 12)) ((#("
										" 0 1 (fontified t) 1 11 (fontified nil)) . 1) (#("
" 0 1 (face font-lock-comment-face fontified t)) . 13) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (14 . 15)) (25959 42513 924583 485000) 0 nil])
([nil nil ((36 . 43)) nil (25959 42697 838693 131000) 0 nil])
nil
([nil nil ((#("
" 0 1 (fontified t)) . -35) (undo-tree-id390 . -1) (undo-tree-id391 . 1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) 36) nil (25959 42697 838692 411000) 0 nil])
([nil nil ((34 . 36)) nil (25959 42697 838686 851000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-delimiter-face fontified nil)) . -14) (13 . 14) (1 . 2)) nil (25959 42697 838686 281000) 0 nil])
([nil nil ((1 . 9)) nil (25959 42697 838685 661000) 0 nil])
([nil nil ((9 . 19)) nil (25959 42697 838685 271000) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-comment-face fontified t)) . -17) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (#("l" 0 1 (face font-lock-comment-face fontified t)) . -18) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) 19) nil (25959 42697 838684 261000) 0 nil])
([nil nil ((17 . 33)) nil (25959 42697 838678 921000) 0 nil])
([nil nil ((33 . 54)) nil (25959 42697 838678 531000) 0 nil])
([nil nil ((#("a" 0 1 (face font-lock-comment-face fontified t)) . -53) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) 54) nil (25959 42697 838677 971000) 0 nil])
([nil nil ((53 . 58)) nil (25959 42697 838676 341000) 0 nil])
([nil nil ((#("r" 0 1 (face font-lock-comment-face fontified t)) . -57) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) 58) nil (25959 42697 838675 711000) 0 nil])
([nil nil ((57 . 59)) nil (25959 42697 838672 31000) 0 nil])
([nil nil ((59 . 60)) nil (25959 42697 838671 551000) 0 nil])
([nil nil ((60 . 63)) nil (25959 42697 838670 871000) 0 nil])
([nil nil ((63 . 64)) nil (25959 42697 838670 271000) 0 nil])
([nil nil ((#(";" 0 1 (face font-lock-comment-delimiter-face fontified t)) . -62) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) 63) nil (25959 42697 838669 591000) 0 nil])
([nil nil ((62 . 63)) nil (25959 42697 838666 461000) 0 nil])
([nil nil ((63 . 67)) nil (25959 42697 838666 21000) 0 nil])
([nil nil ((#(";;
;;; " 0 2 (face font-lock-comment-delimiter-face fontified t) 2 3 (face font-lock-comment-face fontified t) 3 7 (face font-lock-comment-delimiter-face fontified t)) . 60) (undo-tree-id323 . -7) (undo-tree-id324 . -7) (undo-tree-id325 . -2) (undo-tree-id326 . -2) (undo-tree-id327 . -2) (undo-tree-id328 . -2) (undo-tree-id329 . -2) (undo-tree-id330 . -2) (undo-tree-id331 . -2) (undo-tree-id332 . -2) (undo-tree-id333 . -2) (undo-tree-id334 . -2) (undo-tree-id335 . -2) (undo-tree-id336 . -2) (undo-tree-id337 . 5) (undo-tree-id338 . -3) (undo-tree-id339 . -3) (undo-tree-id340 . -3) (undo-tree-id341 . -3) (undo-tree-id342 . -3) (undo-tree-id343 . -3) (undo-tree-id344 . -6) (undo-tree-id345 . -6) (undo-tree-id346 . -6) (undo-tree-id347 . -6) (undo-tree-id348 . -6) (undo-tree-id349 . -6) (undo-tree-id350 . -7) (undo-tree-id351 . -7) (undo-tree-id352 . -7) (undo-tree-id353 . -7) (undo-tree-id354 . -7) (undo-tree-id355 . -7) (undo-tree-id356 . -7) (undo-tree-id357 . -7) (undo-tree-id358 . -7) (undo-tree-id359 . -7) (undo-tree-id360 . -7) (undo-tree-id361 . -7) (undo-tree-id362 . -7)) nil (25959 42697 838664 671000) 0 nil])
([nil nil ((nil rear-nonsticky nil 284 . 285) (nil fontified nil 280 . 285) (nil fontified nil 276 . 280) (nil fontified nil 275 . 276) (nil fontified nil 197 . 275) (nil fontified nil 194 . 197) (nil fontified nil 82 . 194) (nil fontified nil 79 . 82) (nil fontified nil 67 . 79) (nil fontified nil 63 . 67) (nil fontified nil 62 . 63) (nil fontified nil 60 . 62) (60 . 285)) nil (25959 42697 838620 221000) 0 nil])
([nil nil ((#(";; Gets the distro name using lsb_release -sd, throws an error if it isn't found" 0 3 (face font-lock-comment-delimiter-face fontified t) 3 80 (face font-lock-comment-face fontified t)) . 194) (undo-tree-id319 . -80) (undo-tree-id320 . -80) (undo-tree-id321 . -80) (undo-tree-id322 . -80)) nil (25959 42697 838617 561000) 0 nil])
([nil nil ((#("
" 0 1 (face font-lock-comment-face fontified t)) . -193) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) 194) nil (25959 42697 838615 101000) 0 nil])
([nil nil ((#("from https://emacs.stackexchange.com/questions/18205/how-can-i-distinguish-between-linux-distributions-in-emacs" 0 111 (face font-lock-comment-face fontified t)) . 82) (undo-tree-id295 . -111) (undo-tree-id296 . -6) (undo-tree-id297 . -6) (undo-tree-id298 . -111) (undo-tree-id299 . -111) (undo-tree-id300 . -111) (undo-tree-id301 . -111) (undo-tree-id302 . -111) (undo-tree-id303 . -111) (undo-tree-id304 . -111) (undo-tree-id305 . -111) (undo-tree-id306 . -111) (undo-tree-id307 . -111) (undo-tree-id308 . -111) (undo-tree-id309 . -111) (undo-tree-id310 . -111)) nil (25959 42697 838610 291000) 0 nil])
([nil nil ((82 . 88)) nil (25959 42697 838580 411000) 0 nil])
([nil nil ((88 . 90)) nil (25959 42697 838579 921000) 0 nil])
([nil nil ((#("s" 0 1 (face font-lock-comment-face fontified t)) . -88) (undo-tree-id293 . -1) (#("a" 0 1 (face font-lock-comment-face fontified t)) . -89) (undo-tree-id294 . -1) 90) nil (25959 42697 838579 261000) 0 nil])
([nil nil ((88 . 90)) nil (25959 42697 838577 911000) 0 nil])
([nil nil ((#("s" 0 1 (face font-lock-comment-face fontified t)) . -88) (undo-tree-id291 . -1) (#("a" 0 1 (face font-lock-comment-face fontified t)) . -89) (undo-tree-id292 . -1) 90) nil (25959 42697 838577 21000) 0 nil])
([nil nil ((88 . 92)) nil (25959 42697 838575 641000) 0 nil])
([nil nil ((92 . 104)) nil (25959 42697 838575 241000) 0 nil])
([nil nil ((100 . 106) (#("wind" 0 4 (face font-lock-comment-face fontified t)) . -100) (undo-tree-id284 . -4) (undo-tree-id285 . -4) (undo-tree-id286 . -4) (undo-tree-id287 . -4) (undo-tree-id288 . -4) (undo-tree-id289 . -4) (undo-tree-id290 . -4) 104) nil (25959 42697 838574 621000) 0 nil])
([nil nil ((106 . 115)) nil (25959 42697 838570 1000) 0 nil])
([nil nil ((#("r" 0 1 (face font-lock-comment-face fontified t)) . -114) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) 115) nil (25959 42697 838569 381000) 0 nil])
([nil nil ((114 . 133)) nil (25959 42697 838567 541000) 0 nil])
([nil nil ((133 . 143)) nil (25959 42697 838567 101000) 0 nil])
([nil nil ((136 . 147) (#("compila" 0 7 (face font-lock-comment-face fontified t)) . -136) (undo-tree-id272 . -7) (undo-tree-id273 . -3) (undo-tree-id274 . -3) (undo-tree-id275 . -5) (undo-tree-id276 . -5) (undo-tree-id277 . -5) (undo-tree-id278 . -5) (undo-tree-id279 . -7) (undo-tree-id280 . -7) 143) nil (25959 42697 838566 431000) 0 nil])
([nil nil ((147 . 156)) nil (25959 42697 838562 681000) 0 nil])
([nil nil ((#("s" 0 1 (face font-lock-comment-face fontified t)) . -155) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) 156) nil (25959 42697 838562 31000) 0 nil])
([nil nil ((155 . 157)) nil (25959 42697 838559 941000) 0 nil])
([nil nil ((#("c" 0 1 (face font-lock-comment-face fontified t)) . -154) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (#("c" 0 1 (face font-lock-comment-face fontified t)) . -155) (undo-tree-id265 . -1) (#("e" 0 1 (face font-lock-comment-face fontified t)) . -156) (undo-tree-id266 . -1) 157) nil (25959 42697 838558 761000) 0 nil])
([nil nil ((154 . 158)) nil (25959 42697 838552 91000) 0 nil])
([nil nil ((158 . 162)) nil (25959 42697 838551 561000) 0 nil])
([nil nil ((#("from enberg on #emacs" 0 21 (fontified t)) . 187) (undo-tree-id228 . -21) (undo-tree-id229 . -21) (undo-tree-id230 . -21) (undo-tree-id231 . -21) (undo-tree-id232 . -21) (undo-tree-id233 . -21) (undo-tree-id234 . -21) (undo-tree-id235 . -21) (undo-tree-id236 . -21) (undo-tree-id237 . -21) (undo-tree-id238 . -21) (undo-tree-id239 . -21) (undo-tree-id240 . -21) (undo-tree-id241 . -21) (undo-tree-id242 . -21) (undo-tree-id243 . -21) (undo-tree-id244 . -21) (undo-tree-id245 . -21) (undo-tree-id246 . -21) (undo-tree-id247 . -21) (undo-tree-id248 . -21) (undo-tree-id249 . -21) (undo-tree-id250 . -21) (undo-tree-id251 . -21) (undo-tree-id252 . -21) (undo-tree-id253 . -21)) nil (25959 42697 838550 271000) 0 nil])
([nil nil ((#(";" 0 1 (face font-lock-comment-delimiter-face fontified t)) . -185) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (#("
" 0 1 (face font-lock-comment-face fontified t)) . -186) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . 1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) 187) nil (25959 42697 838539 81000) 0 nil])
([nil nil ((#(" " 0 1 (fontified nil)) . -187) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (#("	" 0 1 (fontified nil)) . 188) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (184 . 188) 185) nil (25959 42700 143355 279000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -184) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (#(" " 0 1 (fontified t)) . -185) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (#(" " 0 1 (fontified t)) . -186) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) 187) nil (25959 42715 674566 398000) 0 nil] [nil nil ((#("Code:

									   " 0 4 (face font-lock-comment-face fontified t) 4 5 (face font-lock-comment-face fontified t rear-nonsticky t) 5 6 (face font-lock-comment-face fontified t) 6 7 (fontified t) 7 16 (fontified t) 16 19 (fontified t)) . -168) (undo-tree-id6 . -19) (undo-tree-id7 . -19) (undo-tree-id8 . -19) (undo-tree-id9 . -19) (undo-tree-id10 . -19) (undo-tree-id11 . -19) (undo-tree-id12 . -19) (undo-tree-id13 . -19) (undo-tree-id14 . -19) (undo-tree-id15 . -19) (undo-tree-id16 . -19) (undo-tree-id17 . -19) (undo-tree-id18 . -19) (undo-tree-id19 . -19) (undo-tree-id20 . -19) (undo-tree-id21 . -19) (undo-tree-id22 . -19) (undo-tree-id23 . -19) (undo-tree-id24 . -19) (undo-tree-id25 . -19) (undo-tree-id26 . -19) (undo-tree-id27 . -19) (undo-tree-id28 . -19) (undo-tree-id29 . -19) (undo-tree-id30 . -19) (undo-tree-id31 . -19) (undo-tree-id32 . -19) (undo-tree-id33 . 13) (undo-tree-id34 . -19) (undo-tree-id35 . -19) (undo-tree-id36 . -19) (undo-tree-id37 . -19) (undo-tree-id38 . -19) (undo-tree-id39 . -19) (undo-tree-id40 . -19) (undo-tree-id41 . -19) (undo-tree-id42 . -19) (undo-tree-id43 . -19) (undo-tree-id44 . 14) (undo-tree-id45 . -6) (undo-tree-id46 . -6) (undo-tree-id47 . -6) (undo-tree-id48 . -6) (undo-tree-id49 . -6) (undo-tree-id50 . -6) (undo-tree-id51 . 14) (undo-tree-id52 . -5) (undo-tree-id53 . -5) (undo-tree-id54 . -5) (undo-tree-id55 . -5) (undo-tree-id56 . -5) (undo-tree-id57 . -5) (undo-tree-id58 . -19) (undo-tree-id59 . -19) (undo-tree-id60 . -19) (undo-tree-id61 . -19) (undo-tree-id62 . -19) (undo-tree-id63 . -7) 187) ((168 . 187)) (25959 42697 837887 110000) 0 nil])
([nil nil ((#("
									" 0 1 (fontified t) 1 10 (fontified t)) . 174) (undo-tree-id516 . -10) (undo-tree-id517 . -10) (undo-tree-id518 . -10) (undo-tree-id519 . -10) (undo-tree-id520 . -10) (undo-tree-id521 . -10) (undo-tree-id522 . -10) (undo-tree-id523 . -10) (undo-tree-id524 . -10) (undo-tree-id525 . -10) (undo-tree-id526 . -10) (undo-tree-id527 . -10) (undo-tree-id528 . -10) (undo-tree-id529 . -10) (undo-tree-id530 . -10) (undo-tree-id531 . -10) (undo-tree-id532 . -10) (undo-tree-id533 . -10) (undo-tree-id534 . -10) (undo-tree-id535 . -10) (undo-tree-id536 . -10) (undo-tree-id537 . -10) (undo-tree-id538 . -10) (undo-tree-id539 . -10) (undo-tree-id540 . -10) (undo-tree-id541 . -10) (undo-tree-id542 . -10) (undo-tree-id543 . 10) (undo-tree-id544 . -10) (undo-tree-id545 . -10) (undo-tree-id546 . -10) (undo-tree-id547 . -10) (undo-tree-id548 . -10) (undo-tree-id549 . -10) (undo-tree-id550 . -10) (undo-tree-id551 . -10) (undo-tree-id552 . -10) (undo-tree-id553 . -10) (undo-tree-id554 . -10) (undo-tree-id555 . -10) (undo-tree-id556 . -10) (undo-tree-id557 . -10) (undo-tree-id558 . -10) (undo-tree-id559 . -10) (undo-tree-id560 . -10) (undo-tree-id561 . -10) (undo-tree-id562 . -10) (undo-tree-id563 . -10) (undo-tree-id564 . -10) (undo-tree-id565 . -10) (undo-tree-id566 . -10) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1)) nil (25959 42715 674450 378000) 0 nil])
nil
([nil nil ((#("

;;;Code" 0 1 (fontified t) 1 2 (fontified t) 2 5 (face font-lock-comment-delimiter-face fontified t) 5 9 (face font-lock-comment-face fontified t)) . -175) (undo-tree-id507 . 7) (undo-tree-id508 . -2) (undo-tree-id509 . -2) (undo-tree-id510 . -2) (undo-tree-id511 . -2) (undo-tree-id512 . -2) (undo-tree-id513 . -2) (undo-tree-id514 . -9) (undo-tree-id515 . -2) 184) nil (25959 42715 674401 868000) 0 nil])
([nil nil ((#("
" 0 1 (face font-lock-comment-face fontified t)) . -173) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . 1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . 1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (#("
" 0 1 (fontified t)) . -174) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . 1) (undo-tree-id498 . 1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) 175) nil (25959 42715 674394 58000) 0 nil])
([nil nil ((162 . 163)) nil (25959 42715 672998 737000) 0 nil])
([nil nil ((163 . 166)) nil (25959 42719 73390 899000) 0 nil])
([nil nil ((nil rear-nonsticky nil 186 . 187) (nil fontified nil 166 . 187) (166 . 187)) nil (25959 42727 25109 697000) 0 nil] [nil nil ((nil rear-nonsticky nil 184 . 185) (nil fontified nil 182 . 185) (nil fontified nil 173 . 182) (nil fontified nil 172 . 173) (nil fontified nil 171 . 172) (nil fontified nil 170 . 171) (nil fontified nil 166 . 170) (166 . 185)) ((#("Code:

									   " 0 4 (face font-lock-comment-face fontified nil) 4 5 (face font-lock-comment-face fontified nil rear-nonsticky t) 5 6 (face font-lock-comment-face fontified nil) 6 7 (fontified nil) 7 16 (fontified nil) 16 18 (fontified nil) 18 19 (rear-nonsticky nil fontified nil)) . 166) (undo-tree-id720 . -19) (undo-tree-id721 . -19) (undo-tree-id722 . -7) (undo-tree-id723 . -19) (undo-tree-id724 . -19) (nil fontified t 171 . 172) (nil fontified t 172 . 173) (nil rear-nonsticky t 184 . 185)) (25959 42715 672994 67000) 0 nil])
([nil nil ((567 . 568) 187) nil (25959 42727 25105 767000) 0 nil])
nil
([nil nil ((#("e" 0 1 (face font-lock-comment-face fontified t)) . -182) (undo-tree-id884 . -1) 183 (t 25959 42727 27750 589000)) nil (25959 42995 348364 466000) 0 nil])
([nil nil ((182 . 183)) nil (25959 42995 348363 366000) 0 nil])
([nil nil ((#("E" 0 1 (face font-lock-comment-face fontified t)) . -182) (undo-tree-id883 . -1) 183) nil (25959 42995 348362 646000) 0 nil])
([nil nil ((182 . 183)) nil (25959 42995 348361 756000) 0 nil])
([nil nil ((568 . 571)) nil (25959 42995 348361 386000) 0 nil])
([nil nil ((571 . 590)) nil (25959 42995 348360 986000) 0 nil])
([nil nil ((#("t" 0 1 (face font-lock-comment-face fontified t)) . -588) (undo-tree-id879 . -1) (undo-tree-id880 . -1) (undo-tree-id881 . -1) (#("e" 0 1 (face font-lock-comment-face fontified t)) . -589) (undo-tree-id882 . -1) 590) nil (25959 42995 348360 136000) 0 nil])
([nil nil ((588 . 590)) nil (25959 42995 348358 326000) 0 nil])
([nil nil ((#("a" 0 1 (face font-lock-comment-face fontified t)) . -587) (undo-tree-id846 . -1) (undo-tree-id847 . -1) (undo-tree-id848 . -1) (undo-tree-id849 . -1) (undo-tree-id850 . -1) (undo-tree-id851 . -1) (undo-tree-id852 . -1) (undo-tree-id853 . -1) (undo-tree-id854 . -1) (undo-tree-id855 . -1) (undo-tree-id856 . -1) (undo-tree-id857 . -1) (undo-tree-id858 . -1) (undo-tree-id859 . -1) (undo-tree-id860 . -1) (undo-tree-id861 . -1) (undo-tree-id862 . -1) (undo-tree-id863 . -1) (undo-tree-id864 . -1) (#("r" 0 1 (face font-lock-comment-face fontified t)) . -588) (undo-tree-id865 . -1) (undo-tree-id866 . -1) (undo-tree-id867 . -1) (undo-tree-id868 . -1) (undo-tree-id869 . -1) (undo-tree-id870 . -1) (undo-tree-id871 . -1) (#("e" 0 1 (face font-lock-comment-face fontified t)) . -589) (undo-tree-id872 . -1) (undo-tree-id873 . -1) (undo-tree-id874 . -1) (undo-tree-id875 . -1) (undo-tree-id876 . -1) (undo-tree-id877 . -1) (undo-tree-id878 . -1) 590) nil (25959 42995 348356 746000) 0 nil])
([nil nil ((587 . 589)) nil (25959 42995 348342 396000) 0 nil])
([nil nil ((198 . 200)) nil (25959 42995 348341 856000) 0 nil])
([nil nil ((200 . 204) (199 . 201)) nil (25959 42995 348341 306000) 0 nil])
([nil nil ((200 . 206) (#("defv" 0 4 (fontified t)) . -200) (undo-tree-id833 . -4) (undo-tree-id834 . -3) (undo-tree-id835 . -3) (undo-tree-id836 . -3) (undo-tree-id837 . -3) (undo-tree-id838 . -3) (undo-tree-id839 . -3) (undo-tree-id840 . -4) (undo-tree-id841 . -4) (undo-tree-id842 . -4) (undo-tree-id843 . -4) (undo-tree-id844 . -4) (undo-tree-id845 . -4) 204) nil (25959 42995 348340 226000) 0 nil])
([nil nil ((206 . 207)) nil (25959 42995 348331 806000) 0 nil])
([nil nil ((207 . 228)) nil (25959 42995 348331 316000) 0 nil])
([nil nil ((228 . 230)) nil (25959 42995 348330 636000) 0 nil])
([nil nil ((#("2 sec" 0 5 (face font-lock-string-face fontified t)) . 475) (undo-tree-id827 . -5) (undo-tree-id828 . -1) (undo-tree-id829 . -1) (undo-tree-id830 . -5) (undo-tree-id831 . -5) (undo-tree-id832 . -5) 480) nil (25959 42995 348329 776000) 0 nil])
([nil nil ((nil rear-nonsticky nil 234 . 235) (nil fontified nil 230 . 235) (230 . 235)) nil (25959 42995 348325 686000) 0 nil])
([nil nil ((236 . 237) (230 . 231)) nil (25959 42995 348324 676000) 0 nil])
([nil nil ((238 . 240) (#("\"" 0 1 (fontified nil)) . -238) (237 . 239)) nil (25959 42995 348323 906000) 0 nil])
([nil nil ((239 . 255)) nil (25959 42995 348322 886000) 0 nil])
([nil nil ((#("c" 0 1 (face font-lock-doc-face fontified t)) . -254) (undo-tree-id816 . -1) (undo-tree-id817 . -1) (undo-tree-id818 . -1) (undo-tree-id819 . -1) (undo-tree-id820 . -1) (undo-tree-id821 . -1) (undo-tree-id822 . -1) (undo-tree-id823 . -1) (undo-tree-id824 . -1) (undo-tree-id825 . -1) (undo-tree-id826 . -1) 255) nil (25959 42995 348321 836000) 0 nil])
([nil nil ((#("sucsessfull" 0 11 (face font-lock-comment-face fontified t)) . -151) (undo-tree-id805 . -11) (undo-tree-id806 . -4) (undo-tree-id807 . -4) (undo-tree-id808 . -4) (undo-tree-id809 . -4) (undo-tree-id810 . -4) (undo-tree-id811 . -4) (undo-tree-id812 . -11) (undo-tree-id813 . -11) (undo-tree-id814 . -11) (undo-tree-id815 . -11) 162) nil (25959 42995 348316 376000) 0 nil])
([nil nil ((nil rear-nonsticky nil 160 . 161) (nil fontified nil 151 . 161) (151 . 161)) nil (25959 42995 348306 226000) 0 nil])
([nil nil ((#("s" 0 1 (face font-lock-doc-face fontified t)) . -250) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -1) (undo-tree-id740 . -1) (undo-tree-id741 . -1) (undo-tree-id742 . -1) (undo-tree-id743 . -1) (undo-tree-id744 . -1) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (undo-tree-id747 . -1) (undo-tree-id748 . -1) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (undo-tree-id753 . -1) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (undo-tree-id756 . -1) (#("u" 0 1 (face font-lock-doc-face fontified t)) . -251) (undo-tree-id757 . -1) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (undo-tree-id765 . -1) (undo-tree-id766 . -1) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (undo-tree-id769 . -1) (undo-tree-id770 . -1) (undo-tree-id771 . -1) (undo-tree-id772 . -1) (undo-tree-id773 . -1) (undo-tree-id774 . -1) (undo-tree-id775 . -1) (undo-tree-id776 . -1) (undo-tree-id777 . -1) (undo-tree-id778 . -1) (undo-tree-id779 . -1) (undo-tree-id780 . -1) (undo-tree-id781 . -1) (#("c" 0 1 (face font-lock-doc-face fontified t)) . -252) (undo-tree-id782 . -1) (undo-tree-id783 . -1) (undo-tree-id784 . -1) (undo-tree-id785 . -1) (undo-tree-id786 . -1) (undo-tree-id787 . -1) (undo-tree-id788 . -1) (undo-tree-id789 . -1) (undo-tree-id790 . -1) (undo-tree-id791 . -1) (undo-tree-id792 . -1) (undo-tree-id793 . -1) (undo-tree-id794 . -1) (undo-tree-id795 . -1) (undo-tree-id796 . -1) (undo-tree-id797 . -1) (undo-tree-id798 . -1) (undo-tree-id799 . -1) (undo-tree-id800 . -1) (undo-tree-id801 . -1) (undo-tree-id802 . -1) (undo-tree-id803 . -1) (undo-tree-id804 . -1) 253) nil (25959 42995 348297 896000) 0 nil])
([nil nil ((nil rear-nonsticky nil 259 . 260) (nil fontified nil 250 . 260) (250 . 260)) nil (25959 42995 343489 213000) 0 nil])
([nil nil ((260 . 268)) nil (25959 42995 343488 263000) 0 nil])
([nil nil ((261 . 272) (#("compila" 0 7 (face font-lock-doc-face fontified t)) . -261) (undo-tree-id725 . -7) (undo-tree-id726 . -2) (undo-tree-id727 . -2) (undo-tree-id728 . -3) (undo-tree-id729 . -3) (undo-tree-id730 . -7) (undo-tree-id731 . -7) 268) nil (25959 42995 343486 433000) 0 nil])
([nil nil ((272 . 273)) nil (25959 42995 343470 943000) 0 nil])
([nil nil ((662 . 663) 273) nil (25959 42995 343466 583000) 0 nil])
([nil nil ((#("\"" 0 1 (face font-lock-string-face fontified t)) . -518) (undo-tree-id1052 . -1) (undo-tree-id1053 . -1) (undo-tree-id1054 . -1) (undo-tree-id1055 . -1) (undo-tree-id1056 . -1) (undo-tree-id1057 . -1) (undo-tree-id1058 . -1) (#("\"" 0 1 (face font-lock-string-face fontified t)) . -519) (undo-tree-id1059 . -1) 520 (t 25959 42995 355730 674000)) nil (25959 43027 834550 612000) 0 nil])
([nil nil ((518 . 524)) nil (25959 43027 834541 262000) 0 nil])
([nil nil ((524 . 525)) nil (25959 43027 834540 22000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -518) (undo-tree-id927 . -1) (undo-tree-id928 . -1) (undo-tree-id929 . -1) (undo-tree-id930 . -1) (undo-tree-id931 . -1) (undo-tree-id932 . -1) (undo-tree-id933 . -1) (undo-tree-id934 . -1) (undo-tree-id935 . -1) (undo-tree-id936 . -1) (undo-tree-id937 . -1) (undo-tree-id938 . -1) (undo-tree-id939 . -1) (undo-tree-id940 . -1) (undo-tree-id941 . -1) (undo-tree-id942 . -1) (undo-tree-id943 . -1) (undo-tree-id944 . -1) (undo-tree-id945 . -1) (#("i" 0 1 (fontified t)) . -519) (undo-tree-id946 . -1) (undo-tree-id947 . -1) (undo-tree-id948 . -1) (undo-tree-id949 . -1) (undo-tree-id950 . -1) (undo-tree-id951 . -1) (undo-tree-id952 . -1) (undo-tree-id953 . -1) (undo-tree-id954 . -1) (undo-tree-id955 . -1) (undo-tree-id956 . -1) (undo-tree-id957 . -1) (undo-tree-id958 . -1) (undo-tree-id959 . -1) (undo-tree-id960 . -1) (undo-tree-id961 . -1) (undo-tree-id962 . -1) (undo-tree-id963 . -1) (undo-tree-id964 . -1) (#("l" 0 1 (fontified t)) . -520) (undo-tree-id965 . -1) (undo-tree-id966 . -1) (undo-tree-id967 . -1) (undo-tree-id968 . -1) (undo-tree-id969 . -1) (undo-tree-id970 . -1) (undo-tree-id971 . -1) (undo-tree-id972 . -1) (undo-tree-id973 . -1) (undo-tree-id974 . -1) (undo-tree-id975 . -1) (undo-tree-id976 . -1) (undo-tree-id977 . -1) (undo-tree-id978 . -1) (undo-tree-id979 . -1) (undo-tree-id980 . -1) (undo-tree-id981 . -1) (undo-tree-id982 . -1) (undo-tree-id983 . -1) (#("e" 0 1 (fontified t)) . -521) (undo-tree-id984 . -1) (undo-tree-id985 . -1) (undo-tree-id986 . -1) (undo-tree-id987 . -1) (undo-tree-id988 . -1) (undo-tree-id989 . -1) (undo-tree-id990 . -1) (undo-tree-id991 . -1) (undo-tree-id992 . -1) (undo-tree-id993 . -1) (undo-tree-id994 . -1) (undo-tree-id995 . -1) (undo-tree-id996 . -1) (undo-tree-id997 . -1) (undo-tree-id998 . -1) (undo-tree-id999 . -1) (undo-tree-id1000 . -1) (undo-tree-id1001 . -1) (undo-tree-id1002 . -1) (#("n" 0 1 (fontified t)) . -522) (undo-tree-id1003 . -1) (undo-tree-id1004 . -1) (undo-tree-id1005 . -1) (undo-tree-id1006 . -1) (undo-tree-id1007 . -1) (undo-tree-id1008 . -1) (undo-tree-id1009 . -1) (undo-tree-id1010 . -1) (undo-tree-id1011 . -1) (undo-tree-id1012 . -1) (undo-tree-id1013 . -1) (undo-tree-id1014 . -1) (undo-tree-id1015 . -1) (undo-tree-id1016 . -1) (undo-tree-id1017 . -1) (undo-tree-id1018 . -1) (undo-tree-id1019 . -1) (undo-tree-id1020 . -1) (undo-tree-id1021 . -1) (#("t" 0 1 (fontified t)) . -523) (undo-tree-id1022 . -1) (undo-tree-id1023 . -1) (undo-tree-id1024 . -1) (undo-tree-id1025 . -1) (undo-tree-id1026 . -1) (undo-tree-id1027 . -1) (undo-tree-id1028 . -1) (undo-tree-id1029 . -1) (undo-tree-id1030 . -1) (undo-tree-id1031 . -1) (undo-tree-id1032 . -1) (undo-tree-id1033 . -1) (undo-tree-id1034 . -1) (undo-tree-id1035 . -1) (undo-tree-id1036 . -1) (undo-tree-id1037 . -1) (undo-tree-id1038 . -1) (undo-tree-id1039 . -1) (undo-tree-id1040 . -1) (#("-" 0 1 (fontified t)) . -524) (undo-tree-id1041 . -1) (undo-tree-id1042 . -1) (undo-tree-id1043 . -1) (undo-tree-id1044 . -1) (undo-tree-id1045 . -1) (undo-tree-id1046 . -1) (undo-tree-id1047 . -1) (undo-tree-id1048 . -1) (undo-tree-id1049 . -1) (undo-tree-id1050 . -1) (undo-tree-id1051 . -1) 525) nil (25959 43027 834526 72000) 0 nil])
([nil nil ((nil rear-nonsticky nil 539 . 540) (nil fontified nil 518 . 540) (518 . 540)) nil (25959 43027 830639 419000) 0 nil])
([nil current ((593 . 599) (#("          " 0 10 (fontified t)) . 593) (549 . 556) (#("           " 0 11 (fontified t)) . 549) (496 . 503) (#("           " 0 11 (fontified t)) . 496) (undo-tree-id885 . -11) (undo-tree-id886 . -11) (undo-tree-id887 . -11) (undo-tree-id888 . -11) (undo-tree-id889 . -11) (undo-tree-id890 . -11) (undo-tree-id891 . -11) (undo-tree-id892 . -11) (undo-tree-id893 . -11) (undo-tree-id894 . -11) (undo-tree-id895 . -11) (undo-tree-id896 . -11) (undo-tree-id897 . -11) (undo-tree-id898 . -11) (undo-tree-id899 . -11) (undo-tree-id900 . -11) (undo-tree-id901 . -11) (undo-tree-id902 . -11) (undo-tree-id903 . -11) (undo-tree-id904 . -11) (undo-tree-id905 . -11) (undo-tree-id906 . -11) (undo-tree-id907 . -11) (undo-tree-id908 . -11) (undo-tree-id909 . -11) (undo-tree-id910 . -11) (undo-tree-id911 . -11) (undo-tree-id912 . -11) (undo-tree-id913 . -11) (undo-tree-id914 . -11) (undo-tree-id915 . -11) (undo-tree-id916 . -11) (undo-tree-id917 . -11) (undo-tree-id918 . -11) (undo-tree-id919 . -11) (undo-tree-id920 . -11) (undo-tree-id921 . -11) (undo-tree-id922 . -11) (undo-tree-id923 . -11) (undo-tree-id924 . -11) (undo-tree-id925 . -11) (undo-tree-id926 . -11) (477 . 483) (#("          " 0 10 (fontified t)) . 477) (466 . 470) (#("        " 0 8 (fontified t)) . 466) (396 . 400) (#("        " 0 8 (fontified t)) . 396) (339 . 342) (#("    " 0 4 (fontified t)) . 339) (317 . 321) (#("  " 0 2 (fontified t)) . 317) 683) nil (25959 43027 830631 489000) 0 nil])
nil
